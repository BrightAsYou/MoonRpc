<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- springmvc默认配置文件 -->
    <!-- 激活@Controller模式 -->
    <!-- 对包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 需要更改 -->
    <context:annotation-config/>
    <context:component-scan base-package="org.brightasu.web.controller">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!-- JSR-303 support will be detected on classpath and enabled automatically -->
    <mvc:default-servlet-handler />
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean id="jsonHttpMessageConverter"
                  class="com.jiupai.cornerstone.web.converter.JsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <!-- IE10以下不支持application/json,会导致认为是流处理,因而进行下载 -->
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>image/jpeg</value>
                        <value>image/png</value>
                        <value>image/x-icon</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--RequestMapping-->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/>

    <!--&lt;!&ndash; 视图解释类 &ndash;&gt;-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑 -->
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="cache" value="false"/>
    </bean>

    <!--上下文拦截器-->
    <bean id="contextInterceptor" class="com.jiupai.cornerstone.web.interceptor.ContextInterceptor"/>
    <!--<mvc:interceptors>-->
        <!--<mvc:interceptor>-->
            <!--&lt;!&ndash; 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller &ndash;&gt;-->
            <!--<mvc:mapping path="/**"/>-->
            <!--<ref bean="contextInterceptor"/>-->
        <!--</mvc:interceptor>-->
        <!--&lt;!&ndash; 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 &ndash;&gt;-->

    <!--</mvc:interceptors>-->

    <!--登录验证-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/*.html"/>
            <mvc:mapping path="/index.html"/>
            <mvc:mapping path="/manhattan/taskAdmin/**"/>
            <mvc:exclude-mapping path="/login.html"/>
            <bean class="com.jiupai.manhattan.web.filter.LoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!--web层异常捕捉Handler-->
    <bean class="com.jiupai.cornerstone.web.handler.JsonExceptionHandler"/>

    <!--static resources-->
    <mvc:resources location="/WEB-INF/public/images/" mapping="/images/**"/>
    <mvc:resources location="/WEB-INF/public/js/" mapping="/js/**"/>
    <mvc:resources location="/WEB-INF/public/css/" mapping="/css/**"/>

    <!--需要参数校验时打开-->
    <!--<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">-->
        <!--<property name="validationMessageSource" ref="messageSource"/>-->
    <!--</bean>-->
    <!-- 国际化操作 拦截器 必需配置，可以和其它国际化方式通用 -->
    <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
        <property name="paramName" value="locale"/>
    </bean>
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
        <property name="defaultLocale" value="zh_CN"/>
    </bean>

    <bean id="jsonpInterceptor" class="com.jiupai.manhattan.web.filter.JsonpInterceptor"/>
</beans>
